{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { loginSuccess, loginFailure } from \"../store/authSlice\";\n\n// Worker saga: Handles login logic\nfunction* loginSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/auth/login\", action.payload);\n    yield put(loginSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    var _error$response;\n    yield put(loginFailure(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Login failed\")); // Dispatch failure action\n  }\n}\n\n// Watcher saga: Watches for login actions\nexport default function* watchAuthSaga() {\n  yield takeLatest(\"auth/loginRequest\", loginSaga); // Watch for loginRequest actions\n}","map":{"version":3,"names":["takeLatest","put","call","axios","loginSuccess","loginFailure","loginSaga","action","response","post","payload","data","error","_error$response","watchAuthSaga"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/authSaga.js"],"sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { loginSuccess, loginFailure } from \"../store/authSlice\";\n\n// Worker saga: Handles login logic\nfunction* loginSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/auth/login\", action.payload);\n    yield put(loginSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    yield put(loginFailure(error.response?.data || \"Login failed\")); // Dispatch failure action\n  }\n}\n\n// Watcher saga: Watches for login actions\nexport default function* watchAuthSaga() {\n  yield takeLatest(\"auth/loginRequest\", loginSaga); // Watch for loginRequest actions\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;;AAE/D;AACA,UAAUC,SAASA,CAACC,MAAM,EAAE;EAC1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACC,KAAK,CAACM,IAAI,EAAE,aAAa,EAAEF,MAAM,CAACG,OAAO,CAAC;IACtE,MAAMT,GAAG,CAACG,YAAY,CAACI,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAMZ,GAAG,CAACI,YAAY,CAAC,EAAAQ,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,cAAc,CAAC,CAAC,CAAC,CAAC;EACnE;AACF;;AAEA;AACA,eAAe,UAAUG,aAAaA,CAAA,EAAG;EACvC,MAAMd,UAAU,CAAC,mBAAmB,EAAEM,SAAS,CAAC,CAAC,CAAC;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}