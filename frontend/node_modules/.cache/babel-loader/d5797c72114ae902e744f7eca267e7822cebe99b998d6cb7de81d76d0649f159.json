{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst friendSlice = createSlice({\n  name: \"friends\",\n  initialState: {\n    friends: [],\n    requests: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchFriendsRequest: state => {\n      state.loading = true;\n    },\n    fetchFriendsSuccess: (state, action) => {\n      state.loading = false;\n      state.friends = action.payload;\n    },\n    fetchFriendsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    addFriendRequest: (state, action) => {\n      state.requests.push(action.payload);\n    },\n    acceptFriendRequest: (state, action) => {\n      state.friends.push(action.payload);\n      state.requests = state.requests.filter(req => req._id !== action.payload);\n    }\n  }\n});\nexport const {\n  fetchFriendsRequest,\n  fetchFriendsSuccess,\n  fetchFriendsFailure,\n  addFriendRequest,\n  acceptFriendRequest\n} = friendSlice.actions;\nexport default friendSlice.reducer;","map":{"version":3,"names":["createSlice","friendSlice","name","initialState","friends","requests","loading","error","reducers","fetchFriendsRequest","state","fetchFriendsSuccess","action","payload","fetchFriendsFailure","addFriendRequest","push","acceptFriendRequest","filter","req","_id","actions","reducer"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/store/friendSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst friendSlice = createSlice({\n  name: \"friends\",\n  initialState: {\n    friends: [],\n    requests: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    fetchFriendsRequest: (state) => { state.loading = true; },\n    fetchFriendsSuccess: (state, action) => {\n      state.loading = false;\n      state.friends = action.payload;\n    },\n    fetchFriendsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    addFriendRequest: (state, action) => { state.requests.push(action.payload); },\n    acceptFriendRequest: (state, action) => {\n      state.friends.push(action.payload);\n      state.requests = state.requests.filter((req) => req._id !== action.payload);\n    },\n  },\n});\n\nexport const { fetchFriendsRequest, fetchFriendsSuccess, fetchFriendsFailure, addFriendRequest, acceptFriendRequest } = friendSlice.actions;\nexport default friendSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmB,EAAGC,KAAK,IAAK;MAAEA,KAAK,CAACJ,OAAO,GAAG,IAAI;IAAE,CAAC;IACzDK,mBAAmB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACN,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,mBAAmB,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,gBAAgB,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAAEF,KAAK,CAACL,QAAQ,CAACW,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IAAE,CAAC;IAC7EI,mBAAmB,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACN,OAAO,CAACY,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MAClCH,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACa,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKR,MAAM,CAACC,OAAO,CAAC;IAC7E;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,mBAAmB;EAAEE,mBAAmB;EAAEG,mBAAmB;EAAEC,gBAAgB;EAAEE;AAAoB,CAAC,GAAGhB,WAAW,CAACoB,OAAO;AAC3I,eAAepB,WAAW,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}