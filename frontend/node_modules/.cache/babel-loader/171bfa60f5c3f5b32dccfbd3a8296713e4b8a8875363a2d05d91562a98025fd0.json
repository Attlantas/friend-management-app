{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../store/authSlice\";\nfunction* loginSaga(action) {\n  try {\n    const response = yield call(axios.post, \"http://localhost:5000/api/auth/login\", action.payload);\n    yield put(loginSuccess(response.data));\n  } catch (error) {\n    yield put(loginFailure(error.response.data.message));\n  }\n}\nexport default function* watchAuthSaga() {\n  yield takeLatest(loginRequest.type, loginSaga);\n}","map":{"version":3,"names":["call","put","takeLatest","axios","loginRequest","loginSuccess","loginFailure","loginSaga","action","response","post","payload","data","error","message","watchAuthSaga","type"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/authSaga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { loginRequest, loginSuccess, loginFailure } from \"../store/authSlice\";\n\nfunction* loginSaga(action) {\n  try {\n    const response = yield call(axios.post, \"http://localhost:5000/api/auth/login\", action.payload);\n    yield put(loginSuccess(response.data));\n  } catch (error) {\n    yield put(loginFailure(error.response.data.message));\n  }\n}\n\nexport default function* watchAuthSaga() {\n  yield takeLatest(loginRequest.type, loginSaga);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAE7E,UAAUC,SAASA,CAACC,MAAM,EAAE;EAC1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACG,KAAK,CAACO,IAAI,EAAE,sCAAsC,EAAEF,MAAM,CAACG,OAAO,CAAC;IAC/F,MAAMV,GAAG,CAACI,YAAY,CAACI,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMZ,GAAG,CAACK,YAAY,CAACO,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAC,CAAC;EACtD;AACF;AAEA,eAAe,UAAUC,aAAaA,CAAA,EAAG;EACvC,MAAMb,UAAU,CAACE,YAAY,CAACY,IAAI,EAAET,SAAS,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}