{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { loginSuccess, loginFailure, registerSuccess, registerFailure } from \"../store/authSlice\";\n\n// Worker Saga: Handles login logic\nfunction* loginSaga(action) {\n  try {\n    console.log(\"LOGGING IN\");\n    const response = yield call(axios.post, \"/auth/login\", action.payload);\n    yield put(loginSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    var _error$response;\n    yield put(loginFailure(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Login failed\")); // Dispatch failure action\n  }\n}\n\n// Worker Saga: Handles registration logic\nfunction* registerSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/auth/register\", action.payload);\n    yield put(registerSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    var _error$response2;\n    yield put(registerFailure(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Registration failed\")); // Dispatch failure action\n  }\n}\n\n// Watcher saga: Watches for login and register actions\nexport default function* watchAuthSaga() {\n  yield takeLatest(\"auth/loginRequest\", loginSaga); // Watch for loginRequest\n  yield takeLatest(\"auth/registerRequest\", registerSaga); // Watch for registerRequest\n}","map":{"version":3,"names":["takeLatest","put","call","axios","loginSuccess","loginFailure","registerSuccess","registerFailure","loginSaga","action","console","log","response","post","payload","data","error","_error$response","registerSaga","_error$response2","watchAuthSaga"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/authSaga.js"],"sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { loginSuccess, loginFailure, registerSuccess, registerFailure } from \"../store/authSlice\";\n\n// Worker Saga: Handles login logic\nfunction* loginSaga(action) {\n  try {\n    console.log(\"LOGGING IN\")\n    const response = yield call(axios.post, \"/auth/login\", action.payload);\n    yield put(loginSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    yield put(loginFailure(error.response?.data || \"Login failed\")); // Dispatch failure action\n  }\n}\n\n// Worker Saga: Handles registration logic\nfunction* registerSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/auth/register\", action.payload);\n    yield put(registerSuccess(response.data)); // Dispatch success action\n  } catch (error) {\n    yield put(registerFailure(error.response?.data || \"Registration failed\")); // Dispatch failure action\n  }\n}\n\n// Watcher saga: Watches for login and register actions\nexport default function* watchAuthSaga() {\n  yield takeLatest(\"auth/loginRequest\", loginSaga); // Watch for loginRequest\n  yield takeLatest(\"auth/registerRequest\", registerSaga); // Watch for registerRequest\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,YAAY,EAAEC,YAAY,EAAEC,eAAe,EAAEC,eAAe,QAAQ,oBAAoB;;AAEjG;AACA,UAAUC,SAASA,CAACC,MAAM,EAAE;EAC1B,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACC,KAAK,CAACU,IAAI,EAAE,aAAa,EAAEJ,MAAM,CAACK,OAAO,CAAC;IACtE,MAAMb,GAAG,CAACG,YAAY,CAACQ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAMhB,GAAG,CAACI,YAAY,CAAC,EAAAY,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,cAAc,CAAC,CAAC,CAAC,CAAC;EACnE;AACF;;AAEA;AACA,UAAUG,YAAYA,CAACT,MAAM,EAAE;EAC7B,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMV,IAAI,CAACC,KAAK,CAACU,IAAI,EAAE,gBAAgB,EAAEJ,MAAM,CAACK,OAAO,CAAC;IACzE,MAAMb,GAAG,CAACK,eAAe,CAACM,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAG,gBAAA;IACd,MAAMlB,GAAG,CAACM,eAAe,CAAC,EAAAY,gBAAA,GAAAH,KAAK,CAACJ,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBJ,IAAI,KAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAC7E;AACF;;AAEA;AACA,eAAe,UAAUK,aAAaA,CAAA,EAAG;EACvC,MAAMpB,UAAU,CAAC,mBAAmB,EAAEQ,SAAS,CAAC,CAAC,CAAC;EAClD,MAAMR,UAAU,CAAC,sBAAsB,EAAEkB,YAAY,CAAC,CAAC,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}