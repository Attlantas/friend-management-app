{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { fetchFriendsRequest, fetchFriendsSuccess, fetchFriendsFailure, fetchFriendRequestsRequest, fetchFriendRequestsSuccess, fetchFriendRequestsFailure, sendFriendRequestRequest, sendFriendRequestSuccess, sendFriendRequestFailure, removeFriendRequest, removeFriendSuccess, removeFriendFailure, acceptFriendRequestRequest, acceptFriendRequestSuccess, acceptFriendRequestFailure } from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga(action) {\n  try {\n    const userId = action.payload;\n    const response = yield call(axios.get, `friends/${userId}`);\n    yield put(fetchFriendsSuccess(response.data)); // ✅ Correctly dispatch success\n  } catch (error) {\n    var _error$response;\n    yield put(fetchFriendsFailure(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Failed to fetch friends\"));\n  }\n}\n\n// Fetch Friend Requests Saga\nfunction* fetchFriendRequestsSaga(action) {\n  try {\n    const userId = action.payload;\n    const response = yield call(axios.get, `/friends/${userId}/requests`);\n    yield put(fetchFriendRequestsSuccess(response.data));\n  } catch (error) {\n    var _error$response2;\n    yield put(fetchFriendRequestsFailure(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Failed to fetch friend requests\"));\n  }\n}\n\n// Send Friend Requests Saga\nfunction* sendFriendRequestSaga(action) {\n  try {\n    const {\n      userId,\n      username\n    } = action.payload;\n    console.log(\"LE ACTION: \", action);\n    const response = yield call(axios.post, \"/friends/request/send\", {\n      userId,\n      username\n    });\n    yield put(sendFriendRequestSuccess(response.data));\n  } catch (error) {\n    var _error$response3;\n    yield put(sendFriendRequestFailure(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || \"Failed to fetch friend requests\"));\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    yield call(axios.delete, `/friends/${action.payload}`);\n    yield put(removeFriendSuccess(action.payload));\n  } catch (error) {\n    var _error$response4;\n    yield put(removeFriendFailure(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || \"Failed to remove friend\"));\n  }\n}\n\n// Accept Friend Request Saga\nfunction* acceptFriendRequestSaga(action) {\n  try {\n    const {\n      userId,\n      friendId\n    } = action.payload;\n    const response = yield call(axios.post, \"/friends/request/accept\", {\n      userId,\n      friendId\n    });\n    yield put(acceptFriendRequestSuccess(response.data));\n  } catch (error) {\n    var _error$response5;\n    yield put(acceptFriendRequestFailure(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || \"Failed to accept request\"));\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriendsRequest.type, fetchFriendsSaga);\n  yield takeLatest(fetchFriendRequestsRequest.type, fetchFriendRequestsSaga);\n  yield takeLatest(sendFriendRequestRequest.type, sendFriendRequestSaga);\n  yield takeLatest(removeFriendRequest.type, removeFriendSaga);\n  yield takeLatest(acceptFriendRequestRequest.type, acceptFriendRequestSaga);\n}","map":{"version":3,"names":["takeLatest","put","call","axios","fetchFriendsRequest","fetchFriendsSuccess","fetchFriendsFailure","fetchFriendRequestsRequest","fetchFriendRequestsSuccess","fetchFriendRequestsFailure","sendFriendRequestRequest","sendFriendRequestSuccess","sendFriendRequestFailure","removeFriendRequest","removeFriendSuccess","removeFriendFailure","acceptFriendRequestRequest","acceptFriendRequestSuccess","acceptFriendRequestFailure","fetchFriendsSaga","action","userId","payload","response","get","data","error","_error$response","fetchFriendRequestsSaga","_error$response2","sendFriendRequestSaga","username","console","log","post","_error$response3","removeFriendSaga","delete","_error$response4","acceptFriendRequestSaga","friendId","_error$response5","watchFriendSaga","type"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/friendSaga.js"],"sourcesContent":["import {takeLatest, put, call} from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport {\n  fetchFriendsRequest,\n  fetchFriendsSuccess,\n  fetchFriendsFailure,\n  fetchFriendRequestsRequest,\n  fetchFriendRequestsSuccess,\n  fetchFriendRequestsFailure,\n  sendFriendRequestRequest,\n  sendFriendRequestSuccess,\n  sendFriendRequestFailure,\n  removeFriendRequest,\n  removeFriendSuccess,\n  removeFriendFailure,\n  acceptFriendRequestRequest,\n  acceptFriendRequestSuccess,\n  acceptFriendRequestFailure,\n} from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga(action) {\n  try {\n    const userId = action.payload;\n\n    const response = yield call(axios.get, `friends/${userId}`);\n    yield put(fetchFriendsSuccess(response.data)); // ✅ Correctly dispatch success\n  } catch (error) {\n    yield put(fetchFriendsFailure(error.response?.data || \"Failed to fetch friends\"));\n  }\n}\n\n// Fetch Friend Requests Saga\nfunction* fetchFriendRequestsSaga(action) {\n  try {\n    const userId = action.payload;\n\n    const response = yield call(axios.get, `/friends/${userId}/requests`);\n    yield put(fetchFriendRequestsSuccess(response.data));\n  } catch (error) {\n    yield put(fetchFriendRequestsFailure(error.response?.data || \"Failed to fetch friend requests\"));\n  }\n}\n\n// Send Friend Requests Saga\nfunction* sendFriendRequestSaga(action) {\n  try {\n    const {userId, username} = action.payload;\n    console.log(\"LE ACTION: \", action);\n    \n    const response = yield call(axios.post, \"/friends/request/send\", {userId, username});\n    yield put(sendFriendRequestSuccess(response.data));\n  } catch (error) {\n    yield put(sendFriendRequestFailure(error.response?.data || \"Failed to fetch friend requests\"));\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    yield call(axios.delete, `/friends/${action.payload}`);\n    yield put(removeFriendSuccess(action.payload));\n  } catch (error) {\n    yield put(removeFriendFailure(error.response?.data || \"Failed to remove friend\"));\n  }\n}\n\n// Accept Friend Request Saga\nfunction* acceptFriendRequestSaga(action) {\n  try {\n    const {userId, friendId} = action.payload;\n\n    const response = yield call(axios.post, \"/friends/request/accept\", {userId, friendId});\n    yield put(acceptFriendRequestSuccess(response.data));\n  } catch (error) {\n    yield put(acceptFriendRequestFailure(error.response?.data || \"Failed to accept request\"));\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriendsRequest.type, fetchFriendsSaga);\n  yield takeLatest(fetchFriendRequestsRequest.type, fetchFriendRequestsSaga);\n  yield takeLatest(sendFriendRequestRequest.type, sendFriendRequestSaga);\n  yield takeLatest(removeFriendRequest.type, removeFriendSaga);\n  yield takeLatest(acceptFriendRequestRequest.type, acceptFriendRequestSaga);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}