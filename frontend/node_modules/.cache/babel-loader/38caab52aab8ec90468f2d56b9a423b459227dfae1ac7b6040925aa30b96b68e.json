{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport { fetchFriends, fetchFriendRequests, removeFriend, acceptFriendRequest } from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga() {\n  try {\n    const response = yield call(axios.get, \"/friends\");\n    yield put(fetchFriends.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    var _error$response;\n    yield put(fetchFriends.rejected(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Failed to fetch friends\")); // Dispatch failure\n  }\n}\n\n// Fetch Friend Requests Saga\nfunction* fetchFriendRequestsSaga() {\n  try {\n    const response = yield call(axios.get, \"/friends/requests\");\n    yield put(fetchFriendRequests.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    var _error$response2;\n    yield put(fetchFriendRequests.rejected(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Failed to fetch friend requests\")); // Dispatch failure\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    yield call(axios.delete, `/friends/${action.payload}`);\n    yield put(removeFriend.fulfilled(action.payload)); // Dispatch success\n  } catch (error) {\n    var _error$response3;\n    yield put(removeFriend.rejected(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || \"Failed to remove friend\")); // Dispatch failure\n  }\n}\n\n// Accept Friend Request Saga\nfunction* acceptFriendRequestSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/friends/accept\", {\n      friendId: action.payload\n    });\n    yield put(acceptFriendRequest.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    var _error$response4;\n    yield put(acceptFriendRequest.rejected(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || \"Failed to accept request\")); // Dispatch failure\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriends.pending.type, fetchFriendsSaga); // Watch for fetchFriends.pending\n  yield takeLatest(fetchFriendRequests.pending.type, fetchFriendRequestsSaga); // Watch for fetchFriendRequests.pending\n  yield takeLatest(removeFriend.pending.type, removeFriendSaga); // Watch for removeFriend.pending\n  yield takeLatest(acceptFriendRequest.pending.type, acceptFriendRequestSaga); // Watch for acceptFriendRequest.pending\n}","map":{"version":3,"names":["takeLatest","put","call","axios","fetchFriends","fetchFriendRequests","removeFriend","acceptFriendRequest","fetchFriendsSaga","response","get","fulfilled","data","error","_error$response","rejected","fetchFriendRequestsSaga","_error$response2","removeFriendSaga","action","delete","payload","_error$response3","acceptFriendRequestSaga","post","friendId","_error$response4","watchFriendSaga","pending","type"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/friendSaga.js"],"sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport axios from \"../api/axios\";\nimport {\n  fetchFriends,\n  fetchFriendRequests,\n  removeFriend,\n  acceptFriendRequest,\n} from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga() {\n  try {\n    const response = yield call(axios.get, \"/friends\");\n    yield put(fetchFriends.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    yield put(fetchFriends.rejected(error.response?.data || \"Failed to fetch friends\")); // Dispatch failure\n  }\n}\n\n// Fetch Friend Requests Saga\nfunction* fetchFriendRequestsSaga() {\n  try {\n    const response = yield call(axios.get, \"/friends/requests\");\n    yield put(fetchFriendRequests.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    yield put(fetchFriendRequests.rejected(error.response?.data || \"Failed to fetch friend requests\")); // Dispatch failure\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    yield call(axios.delete, `/friends/${action.payload}`);\n    yield put(removeFriend.fulfilled(action.payload)); // Dispatch success\n  } catch (error) {\n    yield put(removeFriend.rejected(error.response?.data || \"Failed to remove friend\")); // Dispatch failure\n  }\n}\n\n// Accept Friend Request Saga\nfunction* acceptFriendRequestSaga(action) {\n  try {\n    const response = yield call(axios.post, \"/friends/accept\", { friendId: action.payload });\n    yield put(acceptFriendRequest.fulfilled(response.data)); // Dispatch success\n  } catch (error) {\n    yield put(acceptFriendRequest.rejected(error.response?.data || \"Failed to accept request\")); // Dispatch failure\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriends.pending.type, fetchFriendsSaga); // Watch for fetchFriends.pending\n  yield takeLatest(fetchFriendRequests.pending.type, fetchFriendRequestsSaga); // Watch for fetchFriendRequests.pending\n  yield takeLatest(removeFriend.pending.type, removeFriendSaga); // Watch for removeFriend.pending\n  yield takeLatest(acceptFriendRequest.pending.type, acceptFriendRequestSaga); // Watch for acceptFriendRequest.pending\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}