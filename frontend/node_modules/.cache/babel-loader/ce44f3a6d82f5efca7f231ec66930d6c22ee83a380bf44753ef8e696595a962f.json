{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import { useDispatch } from \"react-redux\";\n// import { acceptFriendRequestRequest } from \"../store/friendSlice\";\n// import \"../styles/notification.css\";\n// import io from \"socket.io-client\";\n// import {WEBSOCKET_SERVER_URL} from '../constants';\n\n// const socket = io(WEBSOCKET_SERVER_URL);\n\n// const Notification = () => {\n//   const [notifications, setNotifications] = useState([]);\n//   const dispatch = useDispatch();\n//   const user = useSelector((state) => state.auth.user);\n\n//   useEffect(() => {\n//     if (!user) return;\n\n//     // Listen for incoming friend requests\n//     socket.emit(\"user_online\", user.id);\n//     socket.on(\"friend_request\", (data) => {\n//       setNotifications((prev) => [...prev, data]);\n//     });\n\n//     return () => socket.off(\"friend_request\");\n//   }, [user]);\n\n//   return (\n//     <div className=\"notification-container\">\n//       <h3>Notifications</h3>\n//       {notifications.length > 0 ? (\n//         notifications.map((notif, index) => (\n//           <div key={index} className=\"notification-item\">\n//             <p>\n//               <strong>{notif.senderName}</strong> sent you a friend request.\n//             </p>\n//             <button onClick={() => dispatch(acceptFriendRequestRequest(notif.senderId))} className=\"accept-btn\">\n//               Accept\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No new notifications.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Notification;","map":{"version":3,"names":[],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/components/notification.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import { useDispatch } from \"react-redux\";\n// import { acceptFriendRequestRequest } from \"../store/friendSlice\";\n// import \"../styles/notification.css\";\n// import io from \"socket.io-client\";\n// import {WEBSOCKET_SERVER_URL} from '../constants';\n\n// const socket = io(WEBSOCKET_SERVER_URL);\n\n// const Notification = () => {\n//   const [notifications, setNotifications] = useState([]);\n//   const dispatch = useDispatch();\n//   const user = useSelector((state) => state.auth.user);\n\n//   useEffect(() => {\n//     if (!user) return;\n\n//     // Listen for incoming friend requests\n//     socket.emit(\"user_online\", user.id);\n//     socket.on(\"friend_request\", (data) => {\n//       setNotifications((prev) => [...prev, data]);\n//     });\n\n//     return () => socket.off(\"friend_request\");\n//   }, [user]);\n\n//   return (\n//     <div className=\"notification-container\">\n//       <h3>Notifications</h3>\n//       {notifications.length > 0 ? (\n//         notifications.map((notif, index) => (\n//           <div key={index} className=\"notification-item\">\n//             <p>\n//               <strong>{notif.senderName}</strong> sent you a friend request.\n//             </p>\n//             <button onClick={() => dispatch(acceptFriendRequestRequest(notif.senderId))} className=\"accept-btn\">\n//               Accept\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No new notifications.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Notification;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}