{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { fetchFriendsRequest, fetchFriendsSuccess, fetchFriendsFailure, removeFriendRequest, removeFriendSuccess, removeFriendFailure } from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = yield call(axios.get, \"http://localhost:5000/api/friends/friends\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    yield put(fetchFriendsSuccess(response.data.friends)); // Dispatch success action\n  } catch (error) {\n    var _error$response, _error$response$data;\n    yield put(fetchFriendsFailure(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to fetch friends\")); // Handle error\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    yield call(axios.delete, `http://localhost:5000/api/friends/remove/${action.payload}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    yield put(removeFriendSuccess(action.payload)); // Dispatch success action with friend ID\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    yield put(removeFriendFailure(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to remove friend\")); // Handle error\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriendsRequest.type, fetchFriendsSaga); // Watch for fetchFriendsRequest\n  yield takeLatest(removeFriendRequest.type, removeFriendSaga); // Watch for removeFriendRequest\n}","map":{"version":3,"names":["call","put","takeLatest","axios","fetchFriendsRequest","fetchFriendsSuccess","fetchFriendsFailure","removeFriendRequest","removeFriendSuccess","removeFriendFailure","fetchFriendsSaga","token","localStorage","getItem","response","get","headers","Authorization","data","friends","error","_error$response","_error$response$data","message","removeFriendSaga","action","delete","payload","_error$response2","_error$response2$data","watchFriendSaga","type"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/sagas/friendSaga.js"],"sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  fetchFriendsRequest,\n  fetchFriendsSuccess,\n  fetchFriendsFailure,\n  removeFriendRequest,\n  removeFriendSuccess,\n  removeFriendFailure,\n} from \"../store/friendSlice\";\n\n// Fetch Friends Saga\nfunction* fetchFriendsSaga() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = yield call(axios.get, \"http://localhost:5000/api/friends/friends\", {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    yield put(fetchFriendsSuccess(response.data.friends)); // Dispatch success action\n  } catch (error) {\n    yield put(fetchFriendsFailure(error.response?.data?.message || \"Failed to fetch friends\")); // Handle error\n  }\n}\n\n// Remove Friend Saga\nfunction* removeFriendSaga(action) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    yield call(axios.delete, `http://localhost:5000/api/friends/remove/${action.payload}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    yield put(removeFriendSuccess(action.payload)); // Dispatch success action with friend ID\n  } catch (error) {\n    yield put(removeFriendFailure(error.response?.data?.message || \"Failed to remove friend\")); // Handle error\n  }\n}\n\n// Watcher Saga\nexport default function* watchFriendSaga() {\n  yield takeLatest(fetchFriendsRequest.type, fetchFriendsSaga); // Watch for fetchFriendsRequest\n  yield takeLatest(removeFriendRequest.type, removeFriendSaga); // Watch for removeFriendRequest\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QACd,sBAAsB;;AAE7B;AACA,UAAUC,gBAAgBA,CAAA,EAAG;EAC3B,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACG,KAAK,CAACY,GAAG,EAAE,2CAA2C,EAAE;MAClFC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,MAAMV,GAAG,CAACI,mBAAmB,CAACS,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAMrB,GAAG,CAACK,mBAAmB,CAAC,EAAAe,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,yBAAyB,CAAC,CAAC,CAAC,CAAC;EAC9F;AACF;;AAEA;AACA,UAAUC,gBAAgBA,CAACC,MAAM,EAAE;EACjC,IAAI;IACF,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMb,IAAI,CAACG,KAAK,CAACuB,MAAM,EAAE,4CAA4CD,MAAM,CAACE,OAAO,EAAE,EAAE;MACrFX,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,MAAMV,GAAG,CAACO,mBAAmB,CAACiB,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,qBAAA;IACd,MAAM5B,GAAG,CAACQ,mBAAmB,CAAC,EAAAmB,gBAAA,GAAAR,KAAK,CAACN,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,yBAAyB,CAAC,CAAC,CAAC,CAAC;EAC9F;AACF;;AAEA;AACA,eAAe,UAAUO,eAAeA,CAAA,EAAG;EACzC,MAAM5B,UAAU,CAACE,mBAAmB,CAAC2B,IAAI,EAAErB,gBAAgB,CAAC,CAAC,CAAC;EAC9D,MAAMR,UAAU,CAACK,mBAAmB,CAACwB,IAAI,EAAEP,gBAAgB,CAAC,CAAC,CAAC;AAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}