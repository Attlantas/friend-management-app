{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst friendSlice = createSlice({\n  name: \"friends\",\n  initialState: {\n    friendList: {\n      friends: []\n    },\n    requestList: {\n      requests: []\n    },\n    loading: false,\n    error: null\n  },\n  reducers: {\n    fetchFriendsRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchFriendsSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList = action.payload;\n    },\n    fetchFriendsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchFriendRequestsRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchFriendRequestsSuccess: (state, action) => {\n      state.loading = false;\n      state.requestList = action.payload;\n      state.requestList.requests = [...state.requestList.requests, ...action.payload.requests]; // Append new requests\n      state.requestList.page = action.payload.page;\n      state.requestList.total = action.payload.total;\n    },\n    fetchFriendRequestsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    sendFriendRequestRequest: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    sendFriendRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.requestList.requests.push(action.payload);\n    },\n    sendFriendRequestFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    removeFriendRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    removeFriendSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList.friends = state.friendList.friends.filter(friend => friend._id !== action.payload._id);\n    },\n    removeFriendFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    acceptFriendRequestRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    acceptFriendRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList.friends.push(action.payload);\n      state.requestList.requests = state.requestList.requests.filter(req => req._id !== action.payload._id);\n    },\n    acceptFriendRequestFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  fetchFriendsRequest,\n  fetchFriendsSuccess,\n  fetchFriendsFailure,\n  fetchFriendRequestsRequest,\n  fetchFriendRequestsSuccess,\n  fetchFriendRequestsFailure,\n  sendFriendRequestRequest,\n  sendFriendRequestSuccess,\n  sendFriendRequestFailure,\n  removeFriendRequest,\n  removeFriendSuccess,\n  removeFriendFailure,\n  acceptFriendRequestRequest,\n  acceptFriendRequestSuccess,\n  acceptFriendRequestFailure\n} = friendSlice.actions;\nexport default friendSlice.reducer;","map":{"version":3,"names":["createSlice","friendSlice","name","initialState","friendList","friends","requestList","requests","loading","error","reducers","fetchFriendsRequest","state","fetchFriendsSuccess","action","payload","fetchFriendsFailure","fetchFriendRequestsRequest","fetchFriendRequestsSuccess","page","total","fetchFriendRequestsFailure","sendFriendRequestRequest","sendFriendRequestSuccess","push","sendFriendRequestFailure","removeFriendRequest","removeFriendSuccess","filter","friend","_id","removeFriendFailure","acceptFriendRequestRequest","acceptFriendRequestSuccess","req","acceptFriendRequestFailure","actions","reducer"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/store/friendSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst friendSlice = createSlice({\n  name: \"friends\",\n  initialState: {\n    friendList: {\n      friends: []\n    },\n    requestList: {\n      requests: []\n    },\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    fetchFriendsRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchFriendsSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList = action.payload;\n    },\n    fetchFriendsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    fetchFriendRequestsRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchFriendRequestsSuccess: (state, action) => {\n      state.loading = false;\n      state.requestList = action.payload;\n      state.requestList.requests = [...state.requestList.requests, ...action.payload.requests]; // Append new requests\n      state.requestList.page = action.payload.page;\n      state.requestList.total = action.payload.total;\n    },\n    fetchFriendRequestsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    sendFriendRequestRequest: (state, action) => {\n      state.loading = true;\n      state.error = null;\n    },\n    sendFriendRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.requestList.requests.push(action.payload)\n    },\n    sendFriendRequestFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    removeFriendRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    removeFriendSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList.friends = state.friendList.friends.filter((friend) => friend._id !== action.payload._id);\n    },\n    removeFriendFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n\n    acceptFriendRequestRequest: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    acceptFriendRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.friendList.friends.push(action.payload)\n      state.requestList.requests = state.requestList.requests.filter((req) => req._id !== action.payload._id);\n    },\n    acceptFriendRequestFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  fetchFriendsRequest,\n  fetchFriendsSuccess,\n  fetchFriendsFailure,\n  fetchFriendRequestsRequest,\n  fetchFriendRequestsSuccess,\n  fetchFriendRequestsFailure,\n  sendFriendRequestRequest,\n  sendFriendRequestSuccess,\n  sendFriendRequestFailure,\n  removeFriendRequest,\n  removeFriendSuccess,\n  removeFriendFailure,\n  acceptFriendRequestRequest,\n  acceptFriendRequestSuccess,\n  acceptFriendRequestFailure,\n} = friendSlice.actions;\n\nexport default friendSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}