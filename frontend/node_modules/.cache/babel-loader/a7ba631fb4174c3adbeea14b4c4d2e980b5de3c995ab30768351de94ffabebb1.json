{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport authReducer from \"./authSlice\";\nimport friendReducer from \"./friendSlice\";\nimport rootSaga from \"../sagas/rootSaga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    friends: friendReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware, logger)\n});\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","authReducer","friendReducer","rootSaga","sagaMiddleware","store","reducer","auth","friends","middleware","getDefaultMiddleware","concat","logger","run"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport authReducer from \"./authSlice\";\nimport friendReducer from \"./friendSlice\";\nimport rootSaga from \"../sagas/rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    friends: friendReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware, logger),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;AAE7C,MAAMK,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAE;IACPC,IAAI,EAAEN,WAAW;IACjBO,OAAO,EAAEN;EACX,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,cAAc,EAAEQ,MAAM;AAC5F,CAAC,CAAC;AAEFR,cAAc,CAACS,GAAG,CAACV,QAAQ,CAAC;AAE5B,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}