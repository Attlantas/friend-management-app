{"ast":null,"code":"var _jsxFileName = \"/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport store from \"./store\";\nimport { loginSuccess } from \"./store/authSlice\";\nimport ProtectedRoute from \"./utils/protectedRoute\";\nimport LoginRegister from \"./pages/login\";\nimport Friends from \"./pages/friends\";\nimport Logout from \"./components/logout\";\nimport AddFriend from \"./components/addFriend\";\nimport Notification from \"./components/notification\";\nimport Sidebar from \"./components/sidebar\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import styles\nimport \"./styles/app.css\";\nimport { setupSocketListeners } from \"./utils/socket\";\n//import \"./styles/global.css\"; // Import a global stylesheet for consistency\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    // Check if the user was already logged in\n    const savedToken = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n    const savedUser = localStorage.getItem(\"user\") || sessionStorage.getItem(\"user\");\n    const parsedUser = savedUser ? JSON.parse(savedUser) : null;\n    console.log(\"savedToken: \", savedToken);\n    console.log(\"parsedUser: \", parsedUser);\n    if (savedToken && savedUser) {\n      dispatch(loginSuccess({\n        token: savedToken,\n        user: parsedUser,\n        rememberMe: true\n      }));\n    }\n  }, [dispatch]);\n\n  // ✅ Run this when user logs in\n  useEffect(() => {\n    if (token && user) {\n      setupSocketListeners(dispatch, user._id);\n    }\n  }, [token, user, dispatch]); // ✅ Ensures WebSocket sets up only when user exists\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: [token && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: [/*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: token ? /*#__PURE__*/_jsxDEV(Navigate, {\n                to: \"/friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(LoginRegister, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/friends\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                children: /*#__PURE__*/_jsxDEV(Friends, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add-friend\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                children: /*#__PURE__*/_jsxDEV(AddFriend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hc+JnogMq/JrBqlHAKb+5KJFEc0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","Provider","useDispatch","useSelector","store","loginSuccess","ProtectedRoute","LoginRegister","Friends","Logout","AddFriend","Notification","Sidebar","ToastContainer","setupSocketListeners","jsxDEV","_jsxDEV","App","_s","dispatch","token","state","auth","user","savedToken","localStorage","getItem","sessionStorage","savedUser","parsedUser","JSON","parse","console","log","rememberMe","_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport store from \"./store\";\nimport { loginSuccess } from \"./store/authSlice\";\nimport ProtectedRoute from \"./utils/protectedRoute\";\nimport LoginRegister from \"./pages/login\";\nimport Friends from \"./pages/friends\";\nimport Logout from \"./components/logout\";\nimport AddFriend from \"./components/addFriend\";\nimport Notification from \"./components/notification\";\nimport Sidebar from \"./components/sidebar\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";  // Import styles\nimport \"./styles/app.css\";\nimport { setupSocketListeners } from \"./utils/socket\";\n//import \"./styles/global.css\"; // Import a global stylesheet for consistency\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n  const user = useSelector((state) => state.auth.user);\n\n  useEffect(() => {\n    // Check if the user was already logged in\n    const savedToken = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n    const savedUser = localStorage.getItem(\"user\") || sessionStorage.getItem(\"user\");\n\n    const parsedUser = savedUser ? JSON.parse(savedUser) : null;\n    console.log(\"savedToken: \", savedToken);\n    console.log(\"parsedUser: \", parsedUser);\n    if (savedToken && savedUser) {\n      dispatch(loginSuccess({token: savedToken, user: parsedUser, rememberMe: true}));\n    }\n  }, [dispatch]);\n\n  // ✅ Run this when user logs in\n  useEffect(() => {\n    if (token && user) {\n      setupSocketListeners(dispatch, user._id);\n    }\n  }, [token, user, dispatch]); // ✅ Ensures WebSocket sets up only when user exists\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app-container\">\n          {token && <Sidebar />}\n          {/* {token && <Logout />} Show Logout button only if logged in */}\n          <div className=\"main-content\">\n            <Routes>\n              {/* If user is logged in, redirect to Friends. Otherwise, show Login/Register */}\n              <Route path=\"/\" element={token ? <Navigate to=\"/friends\" /> : <LoginRegister />} />\n              \n              <Route\n                path=\"/friends\"\n                element={\n                  <ProtectedRoute>\n                    <Friends />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/add-friend\"\n                element={\n                  <ProtectedRoute>\n                    <AddFriend />\n                  </ProtectedRoute>\n                }\n              />\n            </Routes>\n            {/* Toast Notification Container */}\n            <ToastContainer />\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}