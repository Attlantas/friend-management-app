{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../constants\";\n\n// Create Axios instance\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true\n});\n\n// Request interceptor: Attach token to headers\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor: Handle unauthorized errors\ninstance.interceptors.response.use(response => response,\n// Pass through successful responses\nerror => {\n  if (error.response && error.response.status === 401) {\n    // Clear any stored tokens\n    localStorage.removeItem(\"token\");\n    sessionStorage.removeItem(\"token\");\n\n    // Redirect to login page\n    window.location.href = \"/\"; // Redirect user to login page\n  }\n  return Promise.reject(error); // Reject the error to propagate it\n});\nexport default instance;","map":{"version":3,"names":["axios","API_BASE_URL","instance","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","sessionStorage","headers","Authorization","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/Users/kthulu/PersonalDevelopment/friend-management-system/frontend/src/api/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport {API_BASE_URL} from \"../constants\";\n\n// Create Axios instance\nconst instance = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n});\n\n// Request interceptor: Attach token to headers\ninstance.interceptors.request.use(\n  (config) => {\n    const token =\n      localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor: Handle unauthorized errors\ninstance.interceptors.response.use(\n  (response) => response, // Pass through successful responses\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Clear any stored tokens\n      localStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"token\");\n\n      // Redirect to login page\n      window.location.href = \"/\"; // Redirect user to login page\n    }\n    return Promise.reject(error); // Reject the error to propagate it\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,cAAc;;AAEzC;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAEH,YAAY;EACrBI,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAH,QAAQ,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GACTC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;EAElE,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACK,OAAO,CAACC,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAO,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAd,QAAQ,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAKA,QAAQ;AAAE;AACvBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCR,cAAc,CAACQ,UAAU,CAAC,OAAO,CAAC;;IAElC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAC9B;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAChC,CACF,CAAC;AAED,eAAed,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}